---

name: CI
on:
  pull_request:
  push:
    branches:
      - main
jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v3
      - id: determine_release
        uses: cycjimmy/semantic-release-action@v3.0.0
        with:
          dry_run: true
        continue-on-error: true
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - run: |
          echo 'new_release_published=${{ steps.determine_release.outputs.new_release_published }}'
          echo 'new_release_version=${{ steps.determine_release.outputs.new_release_version }}'
          echo 'last_release_version=${{ steps.determine_release.outputs.last_release_version }}'
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: lint
        uses: reviewdog/action-golangci-lint@v2
        with:
          level: info
  test:
    strategy:
      matrix:
        go_version:
          - 1.18.x
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go_version }}
      - uses: actions/cache@v3
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ matrix.go_version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go_version }}
      - name: test
        run: go test -v -race -coverprofile=cover.os-${{ matrix.os }}.ver-${{ matrix.go_version }}.txt -covermode=atomic ./...
      - name: upload coverage
        uses: codecov/codecov-action@v3
        if: ${{ matrix.go_version == '1.18.x' }}
        with:
          files: ./cover.os-${{ matrix.os }}.ver-${{ matrix.go_version }}.txt
